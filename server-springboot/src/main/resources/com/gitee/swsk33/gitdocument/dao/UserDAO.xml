<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gitee.swsk33.gitdocument.dao.UserDAO">
	<resultMap id="userResultMap" type="com.gitee.swsk33.gitdocument.dataobject.User">
		<id column="id" property="id"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="nickname" property="nickname"/>
		<result column="avatar" property="avatar"/>
		<result column="email" property="email"/>
		<result column="gmt_created" property="gmtCreated"/>
		<result column="gmt_modified" property="gmtModified"/>
		<association property="setting" select="com.gitee.swsk33.gitdocument.dao.SettingDAO.getById" column="setting_id" fetchType="eager"/>
		<association property="role" select="com.gitee.swsk33.gitdocument.dao.RoleDAO.getById" column="role_id" fetchType="eager"/>
	</resultMap>

	<insert id="add" parameterType="com.gitee.swsk33.gitdocument.dataobject.User">
		insert into `user` (username, `password`, nickname, avatar, email, `setting_id`, role_id, gmt_created, gmt_modified)
		values (#{username}, #{password}, #{nickname}, #{avatar}, #{email}, #{setting.id}, #{role.id}, now(), now())
	</insert>

	<delete id="delete">
		delete
		from `user`
		where id = #{id}
	</delete>

	<update id="update" parameterType="com.gitee.swsk33.gitdocument.dataobject.User">
		update `user`
		set username     = #{username},
			`password`   = #{password},
			nickname     = #{nickname},
			avatar       = #{avatar},
			email        = #{email},
			role_id      = #{role.id},
			gmt_modified = now()
		where id = #{id}
	</update>

	<select id="getById" resultMap="userResultMap">
		select *
		from `user`
		where id = #{id}
	</select>

	<select id="getByUsernameOrEmail" resultMap="userResultMap">
		select *
		from `user`
		where username = #{credential}
		   or email = #{credential}
	</select>

	<select id="getUserBySettingId" resultMap="userResultMap">
		select *
		from `user`
		where setting_id = #{settingId}
	</select>

	<select id="getAll" resultMap="userResultMap">
		select *
		from `user`
	</select>

	<select id="getAllAdmin" resultMap="userResultMap">
		select *
		from `user`
		where role_id = (select `id` from `role` where name = 'ROLE_ADMIN')
	</select>
</mapper>